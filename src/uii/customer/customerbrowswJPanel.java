/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uii.customer;

/**
 *
 * @author niyat
 */


import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Car;
import model.CarHistory;

public class customerbrowswJPanel extends javax.swing.JPanel {

    /**
     * Creates new form customerbrowswJPanel
     */
    CarHistory history;
     
    public customerbrowswJPanel(   CarHistory s) {
        initComponents();
        history = s;
        
        
        populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtmin = new javax.swing.JTextField();
        txtmax = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblcars = new javax.swing.JTable();
        btnseats = new javax.swing.JButton();
        btnname = new javax.swing.JButton();
        txtname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtyear = new javax.swing.JTextField();
        btnyear = new javax.swing.JButton();
        txtserialno = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnserialno = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtmodel = new javax.swing.JTextField();
        btnmodel = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtcity = new javax.swing.JTextField();
        btncity = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtcarname = new javax.swing.JTextField();
        btncarname = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 255));

        tblcars.setBackground(new java.awt.Color(204, 204, 255));
        tblcars.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblcars.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblcars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "SERIAL NUMBER", "MANUFACTURER NAME", "MANUFACTURING YEAR", "MODEL NUMBER", "NUMBER OF SEATS", "MAINTENENCE EXPIRY DATE", "AVAILABILITY", "LOCATION", "COLOR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblcars);

        btnseats.setText("SEARCH");
        btnseats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnseatsActionPerformed(evt);
            }
        });

        btnname.setText("SEARCH");
        btnname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnameActionPerformed(evt);
            }
        });

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });

        jLabel1.setText("SEARCH BY MINIMUM/MAXIMUM SEATS :");

        jLabel2.setText("SEARCH BY MANUFACTURING YEAR  :");

        txtyear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtyearActionPerformed(evt);
            }
        });

        btnyear.setText("SEARCH");
        btnyear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnyearActionPerformed(evt);
            }
        });

        txtserialno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtserialnoActionPerformed(evt);
            }
        });

        jLabel3.setText("SEARCH BY MANUFACTURER NAME :");

        jLabel4.setText("SEARCH BY SERIAL NUMBER :");

        btnserialno.setText("SEARCH");
        btnserialno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnserialnoActionPerformed(evt);
            }
        });

        jLabel5.setText("SEARCH BY MODEL NUMBER :");

        txtmodel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmodelActionPerformed(evt);
            }
        });

        btnmodel.setText("SEARCH");
        btnmodel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodelActionPerformed(evt);
            }
        });

        jLabel6.setText("SEARCH BY CITY :");

        txtcity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcityActionPerformed(evt);
            }
        });

        btncity.setText("SEARCH");
        btncity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncityActionPerformed(evt);
            }
        });

        jLabel7.setText("SEARCH BY CAR  NAME :");

        txtcarname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcarnameActionPerformed(evt);
            }
        });

        btncarname.setText("SEARCH");
        btncarname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncarnameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtname)
                                    .addComponent(txtserialno)
                                    .addComponent(txtcarname, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)))
                            .addComponent(txtyear, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(134, 134, 134)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnyear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnserialno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btncarname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtmodel, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                .addGap(52, 52, 52)
                                .addComponent(btnmodel, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtmin, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtmax, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 45, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtcity, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addComponent(btncity, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnseats, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(199, 199, 199)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtmodel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnmodel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcarname, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btncarname, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnname, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btncity, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtyear, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtmin, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtmax, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnseats, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnyear, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtserialno, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                            .addComponent(btnserialno, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnseatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnseatsActionPerformed
        // TODO add your handling code here:
        
      
// TODO add your handling code here:
if(!txtmin.getText().isEmpty() && !txtmax.getText().isEmpty())
{
String minNumberOfSeatsAvailable = txtmin.getText().trim();
String maxNumberOfSeatsAvailable = txtmax.getText().trim();
//System.out.println(numberOfSeatsAvailable);
 DefaultTableModel model = (DefaultTableModel)  tblcars.getModel();
         model.setRowCount(0);
       ArrayList<Car> searchedList;

      searchedList= history.getCarRepositoryListByMinorMaxNumberOfSeats(minNumberOfSeatsAvailable, maxNumberOfSeatsAvailable);

       if(searchedList.size() > 0){
       for(Car vs : searchedList){
             
             Object[] row = new Object[10];
             row[0]= vs;
              row[1] = vs.getSerialnumber();
             row[2]= vs.getCar_manufacturer();  
              row[3] = vs.getManufactureryear();
              row[4] = vs.getModel_no();
              row[5]= vs.getNo_seats();
              row[6] = vs.getMaintenancecertificate_date();
              row[7] = vs.getAvailability();
              row[8] = vs.getCar_location();
              row[9] = vs.getColor();
                 model.addRow(row);

          
}
}
else
{
JOptionPane.showMessageDialog(null, "No Records found!");
}
}
else{
JOptionPane.showMessageDialog(null, "Search textbox cannot be empty. Please enter text to search!");
}



        
        
        
    }//GEN-LAST:event_btnseatsActionPerformed

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void btnnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnameActionPerformed
        // TODO add your handling code here:
        
        
        DefaultTableModel search = (DefaultTableModel) tblcars.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(search);
        tblcars.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter("(?i)" + txtname.getText(),2));
        
        
        /**String manufacturingname = txtname.getText();
        if(manufacturingname.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Manufacuter Name");
            return;
        }
         DefaultTableModel model = (DefaultTableModel)  tblcars.getModel();
         model.setRowCount(0);
         
           for(Car vs : history.getHistory()){
               
               if(vs.getCar_manufacturer().equals(manufacturingname.trim()))
               {
             
             Object[] row = new Object[10];
             row[0]= vs;
              row[1] = vs.getSerialnumber();
             row[2]= vs.getCar_manufacturer();  
              row[3] = vs.getManufactureryear();
              row[4] = vs.getModel_no();
              row[5]= vs.getNo_seats();
              row[6] = vs.getMaintenancecertificate_date();
              row[7] = vs.getAvailability();
              row[8] = vs.getCar_location();
              row[9] = vs.getColor();
             
             
              model.addRow(row);
        
               }
           }*/
    }//GEN-LAST:event_btnnameActionPerformed

    private void txtyearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtyearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtyearActionPerformed

    private void btnyearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnyearActionPerformed
        // TODO add your handling code here:
        
        
        DefaultTableModel search = (DefaultTableModel) tblcars.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(search);
        tblcars.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter("(?i)" + txtyear.getText(),3));
        
        /**String manufacturingyear = txtyear.getText();
        if(manufacturingyear.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Manufacturing Year");
            return;
        }
         DefaultTableModel model = (DefaultTableModel)  tblcars.getModel();
         model.setRowCount(0);
         
           for(Car vs : history.getHistory()){
               
               if(vs.getManufactureryear().equals(manufacturingyear.trim()))
               {
             
             Object[] row = new Object[10];
             row[0]= vs;
              row[1] = vs.getSerialnumber();
             row[2]= vs.getCar_manufacturer();  
              row[3] = vs.getManufactureryear();
              row[4] = vs.getModel_no();
              row[5]= vs.getNo_seats();
              row[6] = vs.getMaintenancecertificate_date();
              row[7] = vs.getAvailability();
              row[8] = vs.getCar_location();
              row[9] = vs.getColor();
             
             
              model.addRow(row);
        
               }
           }*/
        
    }//GEN-LAST:event_btnyearActionPerformed

    private void txtserialnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtserialnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtserialnoActionPerformed

    private void btnserialnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnserialnoActionPerformed
        // TODO add your handling code here:
        
        
        
        DefaultTableModel search = (DefaultTableModel) tblcars.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(search);
        tblcars.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter("(?i)" + txtserialno.getText(),1));
        
        
         /**int serialno = Integer.parseInt(txtserialno.getText());
        if(Integer.toString(serialno).isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter serial Number");
            return;
        }
         DefaultTableModel model = (DefaultTableModel)  tblcars.getModel();
         model.setRowCount(0);
         
           for(Car vs : history.getHistory()){
               
               if(vs.getSerialnumber()==(serialno))
               {
             
             Object[] row = new Object[10];
             row[0]= vs;
              row[1] = vs.getSerialnumber();
             row[2]= vs.getCar_manufacturer();  
              row[3] = vs.getManufactureryear();
              row[4] = vs.getModel_no();
              row[5]= vs.getNo_seats();
              row[6] = vs.getMaintenancecertificate_date();
              row[7] = vs.getAvailability();
              row[8] = vs.getCar_location();
              row[9] = vs.getColor();
             
             
              model.addRow(row);
        
               }
           }*/
        
    }//GEN-LAST:event_btnserialnoActionPerformed

    private void txtmodelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmodelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmodelActionPerformed

    private void btnmodelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodelActionPerformed
        // TODO add your handling code here:
        
        
        DefaultTableModel search = (DefaultTableModel) tblcars.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(search);
        tblcars.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter("(?i)" + txtmodel.getText(),4));
        
        
         /** int modelno = Integer.parseInt(txtmodel.getText());
        if(Integer.toString(modelno).isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Model Number");
            return;
        }
         DefaultTableModel model = (DefaultTableModel)  tblcars.getModel();
         model.setRowCount(0);
         
           for(Car vs : history.getHistory()){
               
               if(vs.getModel_no()==(modelno))
               {
             
             Object[] row = new Object[10];
             row[0]= vs;
              row[1] = vs.getSerialnumber();
             row[2]= vs.getCar_manufacturer();  
              row[3] = vs.getManufactureryear();
              row[4] = vs.getModel_no();
              row[5]= vs.getNo_seats();
              row[6] = vs.getMaintenancecertificate_date();
              row[7] = vs.getAvailability();
              row[8] = vs.getCar_location();
              row[9] = vs.getColor();
             
             
              model.addRow(row);
        
               }
           }*/
        
    }//GEN-LAST:event_btnmodelActionPerformed

    private void txtcityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcityActionPerformed
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_txtcityActionPerformed

    private void btncityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncityActionPerformed
        // TODO add your handling code here:
        
        
        DefaultTableModel search = (DefaultTableModel) tblcars.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(search);
        tblcars.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter("(?i)" + txtcity.getText(),8));
        
        
          /**String location = txtcity.getText();
        if(location.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Location");
            return;
        }
         DefaultTableModel model = (DefaultTableModel)  tblcars.getModel();
         model.setRowCount(0);
         
           for(Car vs : history.getHistory()){
               
               if(vs.getCar_location().equals(location.trim()))
               {
             
             Object[] row = new Object[10];
             row[0]= vs;
              row[1] = vs.getSerialnumber();
             row[2]= vs.getCar_manufacturer();  
              row[3] = vs.getManufactureryear();
              row[4] = vs.getModel_no();
              row[5]= vs.getNo_seats();
              row[6] = vs.getMaintenancecertificate_date();
              row[7] = vs.getAvailability();
              row[8] = vs.getCar_location();
              row[9] = vs.getColor();
             
             
              model.addRow(row);
        
               }
           }*/
       
    }//GEN-LAST:event_btncityActionPerformed

    private void txtcarnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcarnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcarnameActionPerformed

    private void btncarnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncarnameActionPerformed
        // TODO add your handling code here:
        
        
        
        DefaultTableModel search = (DefaultTableModel) tblcars.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(search);
        tblcars.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter("(?i)" + txtcarname.getText(),0));
         
        
         /**String carname = txtcarname.getText();
        if(carname.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Car Name");
            return;
        }
         DefaultTableModel model = (DefaultTableModel)  tblcars.getModel();
         model.setRowCount(0);
         
           for(Car vs : history.getHistory()){
               
               if(vs.getCar_name().equals(carname.trim()))
               {
             
             Object[] row = new Object[10];
             row[0]= vs;
              row[1] = vs.getSerialnumber();
             row[2]= vs.getCar_manufacturer();  
              row[3] = vs.getManufactureryear();
              row[4] = vs.getModel_no();
              row[5]= vs.getNo_seats();
              row[6] = vs.getMaintenancecertificate_date();
              row[7] = vs.getAvailability();
              row[8] = vs.getCar_location();
              row[9] = vs.getColor();
             
             
              model.addRow(row);
        
               }
           }*/
        
    }//GEN-LAST:event_btncarnameActionPerformed

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncarname;
    private javax.swing.JButton btncity;
    private javax.swing.JButton btnmodel;
    private javax.swing.JButton btnname;
    private javax.swing.JButton btnseats;
    private javax.swing.JButton btnserialno;
    private javax.swing.JButton btnyear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblcars;
    private javax.swing.JTextField txtcarname;
    private javax.swing.JTextField txtcity;
    private javax.swing.JTextField txtmax;
    private javax.swing.JTextField txtmin;
    private javax.swing.JTextField txtmodel;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtserialno;
    private javax.swing.JTextField txtyear;
    // End of variables declaration//GEN-END:variables

    private void populate() {
                 
        DefaultTableModel model = (DefaultTableModel)  tblcars.getModel();
         model.setRowCount(0);
         
         for(Car vs : history.getHistory()){
             
             Object[] row = new Object[10];
             row[0]= vs;
              row[1] = vs.getSerialnumber();
             row[2]= vs.getCar_manufacturer();  
              row[3] = vs.getManufactureryear();
              row[4] = vs.getModel_no();
              row[5]= vs.getNo_seats();
              row[6] = vs.getMaintenancecertificate_date();
              row[7] = vs.getAvailability();
              row[8] = vs.getCar_location();
              row[9] = vs.getColor();
             
             
              model.addRow(row);
    }
    }
}
